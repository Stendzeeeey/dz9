Дано натуральное N и массив целых чисел размерности N. Отсортировать данный массив по убыванию методом простого выбора. 
В процессе сортировки отсортированную часть накапливать в начале массива. Вывести содержимое массива после каждой итерации сортировки.
Одной итерацией сортировки считать такое действие в результате которого один элемент массива гарантированно встает на правильное место в отсортированном массиве. 
При выводе массива отсортированную часть отделять от неотсортированной с помощью символа |. 
Протокол сортировки выводить в текстовый файл с именем FileName.

#include "pt4.h"
#include <fstream>
using namespace std;

void Solve()
{
    Task("Sort9");
	int n, k, i, m;
	pt >> n;
	int* A = new int[n];
	for (int i = 0; i < n; i++) {
		pt >> A[i];
	}
	string x;
	pt >> x;
	ofstream F;
	F.open(x);
	for (i = 0; i < n; i++) {
		m = A[i];
		k = i;
		for (int j = i; j < n; j++) {
			if (A[j] > m) {
				m = A[j]; 
				k = j;
			}
		}
		if (i != k) {
			A[i] += A[k];
			A[k] = A[i] - A[k];
			A[i] -= A[k];
		}
		if (i != n - 1) {
			for (int j = 0; j <= i; j++) {
				F << A[j] << ' ';
			}
			F << "| ";
			for (int j = i + 1; j < n; j++) {
				F << A[j] << ' ';
			}
			F << endl;
		}
	}

	F.close();
}
